{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CartComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\")(2, \"td\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CartComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    // items = [];\n    // constructor() { }\n    // ngOnInit(): void {\n    // }\n    // addItem(productName: string, price: number) {\n    //   this.items.push({ productName, price, quantity: 1 });\n    // }\n    // removeItem(item) {\n    //   this.items = this.items.filter(i => i !== item);\n    // }\n    // getTotal() {\n    //   return this.items.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    // }\n    // checkout() {\n    //   alert(`Checking out - total cost: ${this.getTotal()}`);\n    // }\n    // items=[];\n    this.ProductArray = [];\n    this.isResultLoaded = false;\n    // this.getAllCustomer();\n    this.getAllproduct();\n  }\n  getAllproduct() {\n    this.http.get(\"http://localhost:8080/api/medicare/viewcart\").subscribe(resultData => {\n      this.isResultLoaded = true;\n      console.log(resultData);\n      this.ProductArray = resultData;\n    });\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"cart\"], [1, \"cart-header\"], [1, \"cart-items\"], [1, \"table\", \"boder=1\"], [4, \"ngFor\", \"ngForOf\"], [1, \"cart-total\"], [1, \"cart-actions\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n      i0.ɵɵtext(3, \"Shopping Cart\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"table\", 3)(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"Product Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Action\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, CartComponent_tr_15_Template, 3, 0, \"tr\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"div\", 5)(17, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterOutlet],\n  styles: [\".cart[_ngcontent-%COMP%] {\\r\\n    width: 500px;\\r\\n    margin: 20px auto;\\r\\n    border: 1px solid gray;\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 2px 2px 5px gray;\\r\\n  }\\r\\n  \\r\\n  .cart-header[_ngcontent-%COMP%] {\\r\\n    background-color: lightgray;\\r\\n    padding: 10px;\\r\\n    text-align: center;\\r\\n    border-top-left-radius: 10px;\\r\\n    \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FydC9jYXJ0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsNEJBQTRCO0VBQzlCOztFQUVBO0lBQ0UsMkJBQTJCO0lBQzNCLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsNEJBQTRCO0lBQzVCLHNCQUFzQjtFQUN4QiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJ0IHtcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbjogMjBweCBhdXRvO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAycHggMnB4IDVweCBncmF5O1xyXG4gIH1cclxuICBcclxuICAuY2FydC1oZWFkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgICAvKiBib3JkZXItdG9wLXJpZ2h0LSAqL1xyXG4gIH0gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAaQA,0BAA+B;IAE7BA,qBAEK;IAKPA,iBAAK;;;ACdb,OAAM,MAAOC,aAAa;EA8BxBC,YAAoBC,IAAe,EAAUC,MAAa;IAAtC,SAAI,GAAJD,IAAI;IAAqB,WAAM,GAANC,MAAM;IA7BnD;IAEA;IAEA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IAGA,iBAAY,GAAW,EAAE;IACzB,mBAAc,GAAG,KAAK;IAKpB;IACA,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAa;IAGX,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,6CAA6C,CAAC,CAE3DC,SAAS,CAAEC,UAAe,IAAG;MAE1B,IAAI,CAACC,cAAc,GAAG,IAAI;MAC1BC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MACvB,IAAI,CAACI,YAAY,GAAGJ,UAAU;IAClC,CAAC,CAAC;EACJ;;AAhDWP,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP1BjB,8BAAkB;MAERA,6BAAa;MAAAA,iBAAK;MAExBA,8BAAwB;MAGdA,4BAAY;MAAAA,iBAAK;MACrBA,0BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MACjBA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAEjBA,8DASK;MACPA,iBAAQ;MAEVA,0BAEM;MAIRA,iBAAM;MAENA,iCAA+B;;;MApBJA,gBAAQ;MAARA,mCAAQ","names":["i0","CartComponent","constructor","http","router","getAllproduct","get","subscribe","resultData","isResultLoaded","console","log","ProductArray","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Phase6_Project\\Medicare\\src\\app\\cart\\cart.component.html","D:\\Phase6_Project\\Medicare\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["<!-- <p>cart works!</p> -->\n<div class=\"cart\">\n    <div class=\"cart-header\">\n      <h3>Shopping Cart</h3>\n    </div>\n    <div class=\"cart-items\">\n      <table class=\"table boder=1\">\n        <tr>\n          <th>Product Name</th>\n          <th>Quantity</th>\n          <th>Price</th>\n          <th>Action</th>\n        </tr>\n        <tr *ngFor=\"let item of items\">\n          <!-- <td>{{ item.productName }}</td> -->\n          <td>\n            <!-- <input type=\"number\" [(ngModel)]=\"item.quantity\"> -->\n          </td>\n          <!-- <td>{{ item.price * item.quantity | currency }}</td> -->\n          <td>\n            <!-- <button (click)=\"removeItem(item)\">Remove</button> -->\n          </td>\n        </tr>\n      </table>\n    </div>\n    <div class=\"cart-total\">\n      <!-- Total: {{ getTotal() | currency }} -->\n    </div>\n    <div class=\"cart-actions\">\n      <!-- <button (click)=\"checkout()\">Checkout</button> -->\n    </div>\n  </div>\n  \n  <router-outlet></router-outlet>","import { Component } from '@angular/core';\nimport { HttpClient ,HttpClientModule} from '@angular/common/http';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n  // items = [];\n\n  // constructor() { }\n\n  // ngOnInit(): void {\n  // }\n\n  // addItem(productName: string, price: number) {\n  //   this.items.push({ productName, price, quantity: 1 });\n  // }\n\n  // removeItem(item) {\n  //   this.items = this.items.filter(i => i !== item);\n  // }\n\n  // getTotal() {\n  //   return this.items.reduce((acc, item) => acc + item.price * item.quantity, 0);\n  // }\n\n  // checkout() {\n  //   alert(`Checking out - total cost: ${this.getTotal()}`);\n  // }\n\n  // items=[];\n\n\n  ProductArray : any[] = [];\n  isResultLoaded = false;\n\n  constructor(private http:HttpClient, private router:Router)\n  {\n    \n    // this.getAllCustomer();\n    this.getAllproduct();\n  }\n\n  getAllproduct()\n  {\n    \n    this.http.get(\"http://localhost:8080/api/medicare/viewcart\")\n  \n    .subscribe((resultData: any)=>\n    {\n        this.isResultLoaded = true;\n        console.log(resultData);\n        this.ProductArray = resultData;\n    });\n  }\n// onCreate(){\n//   this.router.navigate(['/product'])\n// }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}